{"version":3,"sources":["History.js","components/containers/HomeWapper.js","components/containers/FormWrapper.js","components/SearchOil2.js","components/pages/Home.js","Routes.js","components/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["ScrollToTopRoute","prevProps","this","props","path","location","pathname","window","scrollTo","Component","component","rest","Route","render","withRouter","HomeWrapper","styled","div","FormWrapper","SearchOil2","handleChange","selectedOptions","setState","console","log","handleUpdateOilQuantity","oil","soapVals","state","find","s","label","val","oilQuantities","quantity","value","calculateValues","ammoutOfLyeNedded","Object","entries","map","x","LyeSapValue","waterNeeded","result","sapValueData","numbers","Array","from","_","fetch","then","res","json","data","name","onChange","multi","options","i","key","className","Button","onClick","basic","color","React","Home","Routes","Switch","exact","HeaderWrapper","MainLayout","App","Header","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d28bf5ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\n\nclass ScrollToTopRoute extends Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.path === this.props.location.pathname &&\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const { component: Component, ...rest } = this.props;\n\n    return <Route {...rest} render={props => <Component {...props} />} />;\n  }\n}\n\nexport default withRouter(ScrollToTopRoute);\n","import styled from 'styled-components';\n\nconst HomeWrapper = styled.div`\n  background: #c9d6ff;\n  background: -webkit-linear-gradient(to top, #e2e2e2, #c9d6ff);\n  background: linear-gradient(to top, #e2e2e2, #c9d6ff);\n  position: relative;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .add-button {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n  }\n\n  h1 {\n    color: #406098;\n    font-family: 'Titan One', cursive;\n    margin-top: 50px;\n  }\n  .fa-smile {\n    color: #2a7ab0;\n    transform: rotate(-60deg);\n    margin-left: 100px;\n    font-size: 3em;\n  }\n\n  .add-oil {\n    color: #2a7ab0;\n    margin-top: 20px;\n    font-size: 16px;\n    font-family: 'Titillium Web', cursive;\n  }\n  .oil-list {\n    display: none;\n    text-align: center;\n    overflow-y: scroll;\n\n    background-color: #fff;\n    &.active {\n    }\n  }\n`;\n\nexport default HomeWrapper;\n","import styled from 'styled-components';\nconst FormWrapper = styled.div`\n  width: 90%;\n  max-width: 600px;\n  text-align: center;\n  input {\n    height: 35px;\n    width: 90%;\n    max-width: 300px;\n    outline: none;\n    border-radius: 7px;\n    border: none;\n  }\n`;\nexport default FormWrapper;\n","import { Button } from 'semantic-ui-react';\nimport React from 'react';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport FormWrapper from './containers/FormWrapper';\n\nclass SearchOil2 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOptions: [],\n      oilQuantities: {},\n      sapValueData: [],\n      result: []\n    };\n    this.numbers = Array.from(Array(100), (_, x) => {\n      return { label: x + 1, value: x + 1 };\n    });\n  }\n\n  componentDidMount() {\n    const url = 'https://sapvalues-api.herokuapp.com/sap-values';\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          sapValueData: [...data]\n        });\n      });\n  }\n\n  handleChange = selectedOptions => {\n    this.setState({ selectedOptions });\n    console.log('these are The selectedOption', selectedOptions);\n  };\n\n  handleUpdateOilQuantity = oil => {\n    // By calling this function we can pass in params to it initially\n    console.log('this is the OIL from handleUpdateQuantity()', oil);\n    // We return a function. The returned function is actually what is given to\n    // React Select for it to deal with.\n    const soapVals = this.state.selectedOptions.find(s => s.label === oil);\n    return val => {\n      //let sapValList = [];\n      console.log('THIS IS THE VAL ', val);\n      this.setState({\n        oilQuantities: {\n          ...this.state.oilQuantities,\n          [oil]: {\n            quantity: val.value,\n            soapVals: soapVals.value\n          }\n        }\n        //result: (val.value * soapVals.value.LyeSapValue) / 0.3\n      });\n\n      console.log('This Is The Val with the value', val.value);\n      console.log('This Is The Val with the QUANTITY', val.quantity);\n    };\n  };\n  calculateValues = () => {\n    const ammoutOfLyeNedded = Object.entries(this.state.oilQuantities).map(\n      x => x[1].quantity * x[1].soapVals.LyeSapValue\n    );\n\n    const totalWeightSolution = ammoutOfLyeNedded / 0.3;\n    const waterNeeded = totalWeightSolution - ammoutOfLyeNedded;\n\n    this.setState({\n      result: ['Lye Nedded', ammoutOfLyeNedded, 'Water Needed', waterNeeded]\n    });\n\n    console.log(\n      'My Calculated VALUES',\n      Object.entries(this.state.oilQuantities).map(x => x[1].quantity * x[1].soapVals.LyeSapValue)\n    );\n  };\n  render() {\n    const { selectedOptions, oilQuantities, sapValueData, result } = this.state;\n    console.log('this is the oilQuantities state', this.state.oilQuantities);\n\n    return (\n      <FormWrapper>\n        <form>\n          <Select\n            name=\"form-field-name\"\n            value={selectedOptions}\n            onChange={this.handleChange}\n            multi={true}\n            options={sapValueData}\n          />\n        </form>\n        {selectedOptions.map((oil, i) => {\n          const value = oilQuantities[oil.label] && oilQuantities[oil.label].quantity;\n\n          return (\n            <div key={i}>\n              <span>Oil Name: {oil.label}</span>\n\n              <Select\n                name=\"oil-quantity\"\n                value={value}\n                onChange={this.handleUpdateOilQuantity(oil.label)}\n                options={this.numbers}\n              />\n              <div>{result}</div>\n            </div>\n          );\n        })}\n        <div className=\"calculation\">\n          <h4>{result}</h4>\n        </div>\n        <Button onClick={this.calculateValues} basic color=\"orange\">\n          CALCULATE\n        </Button>\n      </FormWrapper>\n    );\n  }\n}\n\nexport default SearchOil2;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nimport HomeWrapper from '../../components/containers/HomeWapper';\nimport SearchOil2 from '../SearchOil2';\n\nconst Home = props => {\n  return (\n    <HomeWrapper>\n      <h1>Simple Lye</h1>\n      <SearchOil2 />\n      <br />\n      <span className=\"far fa-smile\" />\n\n      <div className=\"oil-list\" />\n    </HomeWrapper>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport ScrollToTopRoute from './History';\n\nimport Home from './components/pages/Home';\n\nconst Routes = props => (\n  <Switch>\n    <ScrollToTopRoute path=\"/\" exact component={Home} />\n    <ScrollToTopRoute path=\"/Home\" component={Home} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderWrapper = styled.div`\n  height: 50px;\n\n  box-shadow: inset 0 -2px 5px #8d97b7;\n`;\n\nexport default props => (\n  <HeaderWrapper>\n    <div className=\"header\" />\n  </HeaderWrapper>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport './App.css';\n\nimport Routes from './Routes';\nimport Header from './components/Header';\n\nconst MainLayout = styled.div`\n  height: 100vh;\n\n  h1 {\n    text-align: center;\n  }\n`;\n\nclass App extends React.Component {\n  render() {\n    return (\n      <MainLayout>\n        <Header />\n        <Routes />\n      </MainLayout>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}